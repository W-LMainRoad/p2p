<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zc.p2p.mapper.loan.IncomeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zc.p2p.model.loan.IncomeRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="bid_id" property="bidId" jdbcType="INTEGER" />
    <result column="bid_money" property="bidMoney" jdbcType="DOUBLE" />
    <result column="income_date" property="incomeDate" jdbcType="DATE" />
    <result column="income_money" property="incomeMoney" jdbcType="DOUBLE" />
    <result column="income_status" property="incomeStatus" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, loan_id, bid_id, bid_money, income_date, income_money, income_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zc.p2p.model.loan.IncomeRecord" >
    insert into b_income_record (id, uid, loan_id, 
      bid_id, bid_money, income_date, 
      income_money, income_status)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{loanId,jdbcType=INTEGER}, 
      #{bidId,jdbcType=INTEGER}, #{bidMoney,jdbcType=DOUBLE}, #{incomeDate,jdbcType=DATE}, 
      #{incomeMoney,jdbcType=DOUBLE}, #{incomeStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zc.p2p.model.loan.IncomeRecord" >
    insert into b_income_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="bidId != null" >
        bid_id,
      </if>
      <if test="bidMoney != null" >
        bid_money,
      </if>
      <if test="incomeDate != null" >
        income_date,
      </if>
      <if test="incomeMoney != null" >
        income_money,
      </if>
      <if test="incomeStatus != null" >
        income_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null" >
        #{bidId,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null" >
        #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null" >
        #{incomeDate,jdbcType=DATE},
      </if>
      <if test="incomeMoney != null" >
        #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null" >
        #{incomeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.p2p.model.loan.IncomeRecord" >
    update b_income_record
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null" >
        bid_id = #{bidId,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null" >
        bid_money = #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null" >
        income_date = #{incomeDate,jdbcType=DATE},
      </if>
      <if test="incomeMoney != null" >
        income_money = #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null" >
        income_status = #{incomeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.p2p.model.loan.IncomeRecord" >
    update b_income_record
    set uid = #{uid,jdbcType=INTEGER},
      loan_id = #{loanId,jdbcType=INTEGER},
      bid_id = #{bidId,jdbcType=INTEGER},
      bid_money = #{bidMoney,jdbcType=DOUBLE},
      income_date = #{incomeDate,jdbcType=DATE},
      income_money = #{incomeMoney,jdbcType=DOUBLE},
      income_status = #{incomeStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertByLoanInfoList" parameterType="java.util.ArrayList">
    insert into
        b_income_record(id, uid, loan_id,
      bid_id, bid_money, income_date,
      income_money, income_status)
    values
      <foreach collection="list" item="loanInfo" index="loanIndex" separator=",">
        <if test="loanInfo.productType == 0">
          <foreach collection="loanInfo.bidInfoList" item="bidInfo" index="bidIndex" separator=",">
            (null,#{bidInfo.uid},#{loanInfo.id},#{bidInfo.id},#{bidInfo.bidMoney},
            date_format(date_add(loanInfo.productFullTime,interval #{loanInfo.cycle} day),'%Y-%m-%d'),
            round((#{bidInfo.bidMoney} * (#{loanInfo.rate} / 100 / 365) * #{loanInfo.cycle} * 30),2),0)
          </foreach>
        </if>
        <if test="loanInfo.productType != 0">
          <foreach collection="loanInfo.bidInfoList" item="bidInfo" index="bidIndex" separator=",">
            (null,#{bidInfo.uid},#{loanInfo.id},#{bidInfo.id},#{bidInfo.bidMoney},
            date_format(date_add(#{loanInfo.productFullTime},interval #{loanInfo.cycle} month),'%Y-%m-%d'),
            round((#{bidInfo.bidMoney} * (#{loanInfo.rate} / 100 / 365) * #{loanInfo.cycle} * 30),2),0)
          </foreach>
        </if>
      </foreach>

  </insert>

  <select id="selectByDateAndStatus" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" />
    from
        b_income_record
    where
        income_status = #{status} and to_days(now())-to_days(income_date) <![CDATA[ <= ]]> 0;
  </select>

  <update id="updateStatusByIncomeRecordList">
    update
        b_income_record
    set
        income_status = 1
    where
        id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
          #{item.id}
        </foreach>
  </update>

  <select id="selectIncomeRecordListByUid" resultMap="BaseResultMap">
    select
        i.*,product_name
    from
        b_income_record i
    left join
        b_loan_info l
    on
        i.loan_id = l.id
    where
        uid = #{uid}
    order by
        income_date desc
    limit #{currentPage},#{pageSize}
  </select>

  <select id="selectTotal" resultType="java.lang.Long">
    select
        count(*)
    from
        b_income_record
    where
        uid = #{uid}
  </select>
</mapper>