<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zc.p2p.mapper.loan.LoanInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zc.p2p.model.loan.LoanInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="DOUBLE" />
    <result column="cycle" property="cycle" jdbcType="INTEGER" />
    <result column="release_time" property="releaseTime" jdbcType="DATE" />
    <result column="product_type" property="productType" jdbcType="INTEGER" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="product_money" property="productMoney" jdbcType="DOUBLE" />
    <result column="left_product_money" property="leftProductMoney" jdbcType="DOUBLE" />
    <result column="bid_min_limit" property="bidMinLimit" jdbcType="DOUBLE" />
    <result column="bid_max_limit" property="bidMaxLimit" jdbcType="DOUBLE" />
    <result column="product_status" property="productStatus" jdbcType="INTEGER" />
    <result column="product_full_time" property="productFullTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="product_desc" property="productDesc" jdbcType="LONGVARCHAR" />
  </resultMap>

  <resultMap id="BidInfoResultMap" type="com.zc.p2p.model.loan.BidInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="bid_money" property="bidMoney" jdbcType="DOUBLE" />
    <result column="bid_time" property="bidTime" jdbcType="TIMESTAMP" />
    <result column="bid_status" property="bidStatus" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="LoanBidResultMap" type="com.zc.p2p.model.loan.LoanInfo" extends="BaseResultMap">
    <collection property="bidInfoList" resultMap="BidInfoResultMap"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, product_name, rate, cycle, release_time, product_type, product_no, product_money, 
    left_product_money, bid_min_limit, bid_max_limit, product_status, product_full_time, 
    version,product_desc
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />

    from b_loan_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_loan_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zc.p2p.model.loan.LoanInfo" >
    insert into b_loan_info (id, product_name, rate, 
      cycle, release_time, product_type, 
      product_no, product_money, left_product_money, 
      bid_min_limit, bid_max_limit, product_status, 
      product_full_time, version, product_desc
      )
    values (#{id,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{rate,jdbcType=DOUBLE}, 
      #{cycle,jdbcType=INTEGER}, #{releaseTime,jdbcType=DATE}, #{productType,jdbcType=INTEGER}, 
      #{productNo,jdbcType=VARCHAR}, #{productMoney,jdbcType=DOUBLE}, #{leftProductMoney,jdbcType=DOUBLE}, 
      #{bidMinLimit,jdbcType=DOUBLE}, #{bidMaxLimit,jdbcType=DOUBLE}, #{productStatus,jdbcType=INTEGER}, 
      #{productFullTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, #{productDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zc.p2p.model.loan.LoanInfo" >
    insert into b_loan_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="cycle != null" >
        cycle,
      </if>
      <if test="releaseTime != null" >
        release_time,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="productMoney != null" >
        product_money,
      </if>
      <if test="leftProductMoney != null" >
        left_product_money,
      </if>
      <if test="bidMinLimit != null" >
        bid_min_limit,
      </if>
      <if test="bidMaxLimit != null" >
        bid_max_limit,
      </if>
      <if test="productStatus != null" >
        product_status,
      </if>
      <if test="productFullTime != null" >
        product_full_time,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="productDesc != null" >
        product_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="cycle != null" >
        #{cycle,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime,jdbcType=DATE},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productMoney != null" >
        #{productMoney,jdbcType=DOUBLE},
      </if>
      <if test="leftProductMoney != null" >
        #{leftProductMoney,jdbcType=DOUBLE},
      </if>
      <if test="bidMinLimit != null" >
        #{bidMinLimit,jdbcType=DOUBLE},
      </if>
      <if test="bidMaxLimit != null" >
        #{bidMaxLimit,jdbcType=DOUBLE},
      </if>
      <if test="productStatus != null" >
        #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="productFullTime != null" >
        #{productFullTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="productDesc != null" >
        #{productDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zc.p2p.model.loan.LoanInfo" >
    update b_loan_info
    <set >
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="cycle != null" >
        cycle = #{cycle,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null" >
        release_time = #{releaseTime,jdbcType=DATE},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=INTEGER},
      </if>
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productMoney != null" >
        product_money = #{productMoney,jdbcType=DOUBLE},
      </if>
      <if test="leftProductMoney != null" >
        left_product_money = #{leftProductMoney,jdbcType=DOUBLE},
      </if>
      <if test="bidMinLimit != null" >
        bid_min_limit = #{bidMinLimit,jdbcType=DOUBLE},
      </if>
      <if test="bidMaxLimit != null" >
        bid_max_limit = #{bidMaxLimit,jdbcType=DOUBLE},
      </if>
      <if test="productStatus != null" >
        product_status = #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="productFullTime != null" >
        product_full_time = #{productFullTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="productDesc != null" >
        product_desc = #{productDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zc.p2p.model.loan.LoanInfo" >
    update b_loan_info
    set product_name = #{productName,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=DOUBLE},
      cycle = #{cycle,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=DATE},
      product_type = #{productType,jdbcType=INTEGER},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_money = #{productMoney,jdbcType=DOUBLE},
      left_product_money = #{leftProductMoney,jdbcType=DOUBLE},
      bid_min_limit = #{bidMinLimit,jdbcType=DOUBLE},
      bid_max_limit = #{bidMaxLimit,jdbcType=DOUBLE},
      product_status = #{productStatus,jdbcType=INTEGER},
      product_full_time = #{productFullTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      product_desc = #{productDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zc.p2p.model.loan.LoanInfo" >
    update b_loan_info
    set product_name = #{productName,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=DOUBLE},
      cycle = #{cycle,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=DATE},
      product_type = #{productType,jdbcType=INTEGER},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_money = #{productMoney,jdbcType=DOUBLE},
      left_product_money = #{leftProductMoney,jdbcType=DOUBLE},
      bid_min_limit = #{bidMinLimit,jdbcType=DOUBLE},
      bid_max_limit = #{bidMaxLimit,jdbcType=DOUBLE},
      product_status = #{productStatus,jdbcType=INTEGER},
      product_full_time = #{productFullTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--获取平台历史平局年化收益率-->
  <select id="selectHistoryAverageRate" resultType="Double">
    select cast(avg(rate) as DECIMAL(10,2)) from b_loan_info
  </select>

  <!--分页查询产品信息列表-->
  <select id="selectLoanInfoByPage" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"/>
    from
        b_loan_info
    <where>
      <if test="productType != null">
        product_type = #{productType}
      </if>
    </where>
    order by
        release_time desc
    limit #{currentPage},#{pageSize}
  </select>

  <!--根据产品类型获取产品的总记录数-->
  <select id="selectTotal" resultType="java.lang.Long">
    select count(*) from b_loan_info
    <where>
      <if test="productType != null">
        product_type = ${productType}
      </if>
    </where>
  </select>

  <!--更新产品的剩余可投金额-->
  <update id="updateLeftProductMoneyByLoanId">
    update
        b_loan_info
    set
        left_product_money = left_product_money - #{bidMoney},
        version = version + 1
    where
        id = #{loanId} and version = #{version} and (left_product_money - #{bidMoney}) >= 0
  </update>

  <!--查询投标已满的投标信息列表-->
  <select id="selectLoanInfoByStatus" resultMap="LoanBidResultMap">
    select
        l.*,b.*
    from
        b_loan_info l
    left join
        b_bid_info b
    on
        l.id=b.loan_id
    where
        l.product_status = #{status};
  </select>

  <!--更改已生成收益记录投资信息列表产品状态-->
  <update id="updateStatusBatchByPrimaryKeyList">
      update
          b_loan_info
      set
          product_status = 2
      where
          id in
          <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.id}
          </foreach>
  </update>
</mapper>